version: '3'
services:
  db:
    image: postgres:13
    env_file:
      - ./back/.env
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  backend:
    build:
      context: ./back
      dockerfile: ./Dockerfile.dev
    ports:
      - "3000:3000"
    depends_on:
      - db
    env_file:
      - ./back/.env
    volumes:
      - ./back:/var/lib/postgresql/data
    networks:
      - app-network

  frontend:
    build:
      context: ./front
      dockerfile: ./Dockerfile.dev
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - backend
    env_file:
      - ./front/.env
    volumes:
      - ./front:/usr/app/front
    stdin_open: true

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
